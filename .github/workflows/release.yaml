name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Install and configure GoReleaser
        env:
          GORELEASER_VERSION: '0.161.1'
        run: |
          curl -sL -o goreleaser_amd64.deb "https://github.com/goreleaser/goreleaser/releases/download/v${GORELEASER_VERSION}/goreleaser_amd64.deb"
          sudo dpkg -i goreleaser_amd64.deb
          rm -f goreleaser_amd64.deb

      - name: Import GPG key
        id: import_gpg
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg
          chmod 0700 ~/.gnupg
          cat << EOF > ~/.gnupg/gpg.conf
          use-agent
          pinentry-mode loopback
          EOF
          echo "$GPG_PRIVATE_KEY" | base64 -d | gpg --batch --allow-secret-key-import --import
          gpg --keyid-format LONG --list-secret-keys
          cat << EOF > ~/.gnupg/gpg-agent.conf
          default-cache-ttl 7200
          max-cache-ttl 31536000
          allow-loopback-pinentry
          allow-preset-passphrase
          EOF
          echo RELOADAGENT | gpg-connect-agent
          printf '%s' "$GPG_PASSPHRASE" > /tmp/.gpg_passphrase

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
        run: |
          goreleaser release --parallelism 2 --rm-dist --timeout 1h
